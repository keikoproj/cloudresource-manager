apiVersion: cloudresource.keikoproj.io/v1alpha1
kind: CloudResourceDeployment
metadata:
  annotations:
    source: 'https://github.com/kubernetes/gitops-aws-deployment'
  labels:
    app.kubernetes.io/instance: cloudresource-controller-system
  name: s3-bucket
  namespace: cloudresource-controller-system
spec:
  cloudformation:
    assumeroleprovider:
      acctnum: '586597078518'
      env: ppd
      roleSessionName: gitops-deployment
      externalID: 'cloudresource-586597078518-ppd'
    parameters:
      BucketName: test-usw2-data
    region: us-west-2
    stackname: s3-bucket
    tags:
      gitops: 'true'
    template: |-
      AWSTemplateFormatVersion: 2010-09-09
      Description: CHAPI - Amazon S3
      Metadata:
        AWS::CloudFormation::Interface:
          ParameterGroups:
            -
              Label:
                default: Bucket configuration
              Parameters:
                - BucketName
                - EnableVersioning
            -
              Label:
                default: Access control
              Parameters:
                - AuthorizedRoleARNs
            -
              Label:
                default: Logging configuration
              Parameters:
                - LogDestination
                - LogPrefix
            -
              Label:
                default: Replication configuration
              Parameters:
                - ReplDestination
                - ReplPrefix
          ParameterLabels:
            AuthorizedRoleARNs:
              default: Authorized role ARNs (optional)
            BucketName:
              default: Bucket name
            EnableVersioning:
              default: Enable versioning
            LogDestination:
              default: Destination bucket for access logging
            LogPrefix:
              default: Prefix for log files
            IsS3LogBucket:
              default: Is bucket for storing S3 access logs
            ReplDestination:
              default: Destination bucket for replication
            ReplPrefix:
              default: Prefix of S3 objects to replicate

      Parameters:
        AuthorizedRoleARNs:
          AllowedPattern: ^(arn:aws:iam::\d{12}:role/[^,]+,?)*$
          Default: ""
          Description: >-
            A comma-delimited list of the IAM role ARNs that are allowed to read from
            and write to the bucket. This is only required if the bucket will be
            accessed across accounts.
          Type: String
        BucketName:
          Default: Auto
          Description: >-
            The bucket name (must be globally unique), or "Auto" to generate a name
          Type: String
        EnableVersioning:
          AllowedValues: [false, true]
          Default: false
          Description: >-
            "true" to enable object versioning on the bucket; otherwise, "false"
          Type: String
        LogDestination:
          Default: ""
          Description: Name of the bucket where Amazon S3 should store server access log files
          Type: String
        LogPrefix:
          Default: ""
          Description: A prefix for all access log object keys
          Type: String
        IsS3LogBucket:
          AllowedValues: [false, true]
          Default: false
          Description: Whether or not this bucket is for storing S3 access logs
          Type: String
        ReplDestination:
          Default: ""
          Description: Destination S3 bucket for replication
          Type: String
        ReplPrefix:
          Default: ""
          Description: Prefix of what S3 objects to replicate. Leave empty to replicate entire bucket.
          Type: String
      Conditions:
        EnableCrossAccountAccess: !Not [!Equals [!Ref AuthorizedRoleARNs, ""]]
        GenerateBucketName: !Equals [!Ref BucketName, Auto]
        IsVersioningEnabled: !Or [!Equals [!Ref EnableVersioning, true], !Not [!Equals [!Ref ReplDestination, ""]]]
        ConfigureLogging: !Not [!Equals [!Ref LogDestination, ""]]
        ConfigureLogDelivery: !Equals [!Ref IsS3LogBucket, true]
        ConfigureReplication: !Not [!Equals [!Ref ReplDestination, ""]]
      Resources:
        Bucket:
          Type: AWS::S3::Bucket
          Properties:
            AccessControl: !If [ConfigureLogDelivery, "LogDeliveryWrite", !Ref "AWS::NoValue"]
            BucketEncryption:
              ServerSideEncryptionConfiguration:
                -
                  ServerSideEncryptionByDefault:
                    SSEAlgorithm: AES256
            BucketName: !If [GenerateBucketName, !Ref "AWS::NoValue", !Ref BucketName]
            LoggingConfiguration: !If
              - ConfigureLogging
              -
                DestinationBucketName: !Ref LogDestination
                LogFilePrefix: !Ref LogPrefix
              - !Ref "AWS::NoValue"
            PublicAccessBlockConfiguration:
              BlockPublicAcls: true
              BlockPublicPolicy: true
              IgnorePublicAcls: true
              RestrictPublicBuckets: true
            ReplicationConfiguration: !If
              - ConfigureReplication
              -
                Role: !GetAtt ReplicateRole.Arn
                Rules:
                  - Destination:
                      Bucket: !Sub arn:aws:s3:::${ReplDestination}
                      StorageClass: STANDARD
                    Id: DrBucket
                    Prefix: !Ref ReplPrefix
                    Status: Enabled
              - !Ref "AWS::NoValue"
            VersioningConfiguration:
              Status: !If [IsVersioningEnabled, Enabled, Suspended]
        BucketPolicy:
          Type: AWS::S3::BucketPolicy
          Condition: EnableCrossAccountAccess
          Properties:
            Bucket: !Ref Bucket
            PolicyDocument:
              Statement:
                -
                  Effect: Allow
                  Principal:
                    AWS: !Split [",", !Ref AuthorizedRoleARNs]
                  Action: s3:ListBucket*
                  Resource: !Sub arn:aws:s3:::${Bucket}
                -
                  Effect: Allow
                  Principal:
                    AWS: !Split [",", !Ref AuthorizedRoleARNs]
                  Action:
                    - s3:DeleteObject*
                    - s3:GetObject*
                    - s3:PutObject*
                  Resource: !Sub arn:aws:s3:::${Bucket}/*
        ReplicateRole:
          Type: AWS::IAM::Role
          Condition: ConfigureReplication
          Properties:
            AssumeRolePolicyDocument:
              Statement:
              - Action: ['sts:AssumeRole']
                Effect: Allow
                Principal:
                  Service: [s3.amazonaws.com]
            Path: /
            Policies:
              -
                PolicyName: S3ReplicatePolicy
                PolicyDocument:
                  Version: 2012-10-17
                  Statement:
                    -
                      Action:
                        - s3:Get*
                        - s3:ListBucket
                      Resource:
                        - !Sub arn:aws:s3:::${BucketName}
                        - !Sub arn:aws:s3:::${BucketName}/*
                      Effect: 'Allow'
                    -
                      Action:
                        - s3:ReplicateObject
                        - s3:ReplicateDelete
                        - s3:ReplicateTags
                        - s3:GetObjectVersionTagging
                      Effect: 'Allow'
                      Resource: !Sub arn:aws:s3:::${ReplDestination}/*
      Outputs:
        BucketName:
          Description: The bucket name
          Value: !Ref Bucket
